// Generated by CoffeeScript 1.12.4
(function() {
  var elById, newEl, observe, relevant_data_map, sort_station_by_name, sykkel_setup;

  if (window.strindhaug == null) {
    window.strindhaug = {};
  }

  elById = window.strindhaug.elById;

  observe = window.strindhaug.observe;

  newEl = window.strindhaug.newEl;

  relevant_data_map = {};

  sort_station_by_name = function(a, b) {
    return a.name.localeCompare(b.name);
  };

  sykkel_setup = function() {
    var error, frag, i, info, j, last_updated, len, len1, ref, ref1, ref2, s, sorted, status, sykkel_tab_body, sysinfo, tr;
    try {
      sysinfo = JSON.parse(elById('data-sysinfo').textContent);
      status = JSON.parse(elById('data-status').textContent);
      info = JSON.parse(elById('data-info').textContent);
    } catch (error1) {
      error = error1;
      console.error("Json parsing failed: ", error);
      elById('sykkel_tab_body').innerHTML = "<tr><td colspan=\"4\" class=\"col-center\">Noe gikk galt, pr√∏v igjen litt senere.</td></tr>";
      return;
    }
    frag = document.createDocumentFragment();
    ref1 = status != null ? (ref = status.data) != null ? ref.stations : void 0 : void 0;
    for (i = 0, len = ref1.length; i < len; i++) {
      s = ref1[i];
      relevant_data_map[s.station_id] = {
        num_bikes_available: s.num_bikes_available,
        num_docks_available: s.num_docks_available
      };
    }
    sorted = info != null ? (ref2 = info.data) != null ? ref2.stations.sort(sort_station_by_name) : void 0 : void 0;
    for (j = 0, len1 = sorted.length; j < len1; j++) {
      s = sorted[j];
      if (relevant_data_map.hasOwnProperty(s.station_id)) {
        tr = newEl("tr", "", "<td class=\"col-text\">" + s.name + "</td>\n<td class=\"col-number\">" + relevant_data_map[s.station_id].num_docks_available + "</td>\n<td class=\"col-number\">" + relevant_data_map[s.station_id].num_bikes_available + "</td>\n<td></td>");
        frag.appendChild(tr);
      } else {
        console.warn("Didn't find status data for id " + s.station_id + " (" + s.name + ")");
        tr = newEl("tr", "warn", "<td class=\"col-text\">" + s.name + "</td>\n<td class=\"col-number\">?</td>\n<td class=\"col-number\">?</td>\n<td class=\"col-center error\">Mangler data</td>");
        frag.appendChild(tr);
      }
    }
    sykkel_tab_body = elById('sykkel_tab_body');
    sykkel_tab_body.innerHTML = "";
    sykkel_tab_body.appendChild(frag.cloneNode(true));
    last_updated = new Date(status.last_updated * 1000);
    return elById('status_display').innerHTML = "Data fra " + sysinfo.data.name + ". <br>Sist oppdatert: " + last_updated;
  };

  observe(document, "DOMContentLoaded", function(event) {
    console.info("sykkel INIT");
    return sykkel_setup();
  });

}).call(this);
